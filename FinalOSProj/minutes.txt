To Do:
Ask Dr. Parker about memory
Ask about display and multiple changes per clock cycle


Dispatcher:
	Public Methods:
		pcb* run(void) - gets next process to run
    pcb* getRunningProcess() - get currently running process
		void moveProcToExit(pcb*)
		vector<pcb*> getReadyProcs(void)
    vector<pcb*> getExitProcs(void)
		void addToReady(vector<pcb*>)

Output Manager:
	Public Methods:
		void run(void) - Outputs the entire display

High Level Scheduler:
	Public Methods:
		void run(Dispatcher disp, Memorymanager mm)
		void addToNew(vector<pcb*> masterArray,int clock)
		vector<pcb*> getNewProcs(void)

Interrupt Manager:
	Public Methods:
		vector<pcb*> run(void) //Returns all jobs that have completed IO requests
		void addToBlocked(pcb*)
		vector<pcb*> getBlockedProcs()

PCB: 
	All necessary attributes	

Memory Manager:
	Public Methods:
		bool Allocate(pcb*)
		bool Deallocate(pcb*)
		int getFreeAmount(void)

